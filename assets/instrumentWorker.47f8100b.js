import("./global.dae64e40.js").then(({LOG_LEVEL_DEBUG:s})=>{s||(self.console.debug=()=>{})});Promise.all([import("./WorkerMessageOperations.e53da7d0.js"),import("./BinanceSocketHandler.a7eed77b.js"),import("./CoinbaseSocketHandler.696bb389.js"),import("./CoinFlexSocketHandler.d4582601.js"),import("./BitmexSocketHandler.ee073e09.js"),import("./SocketHandlers.0ffd5406.js")]).then(([{default:s},{default:d},{default:c},{default:u},{default:f}])=>{const o={providers:[]},m=e=>{const{symbol:l,provider:r,ask:t,bid:n}=e;let a=!1;return!l||!r||!t||!n?!1:((!o.bid||n>o.bid)&&(o.bid=Number(n).toFixed(6),o.bidProvider=r,a=!0),(!o.ask||t<o.ask)&&(o.ask=Number(t).toFixed(6),o.askProvider=r,a=!0),(o.providers.length<=0||!o.providers.includes(r))&&(o.providers.push(r),a=!0),console.debug(`From ${e.provider}: Received ${a?"relevant##":"irrelevant"} event for ${e.symbol} at ${Date.now()}`,e),a)},b=e=>{m(e)&&postMessage({operation:s.PRICE_UPDATE,data:o})},i=[d,c,u,f].map(e=>new e(b));Promise.all(i.map(e=>e.waitForReadyState())).then(()=>postMessage({operation:s.SOCKET_READY})).catch(e=>console.error(`Not all sockets opened successfully: ${e}`)),onmessage=e=>{const{operation:l,symbol:r}=e.data;switch(l){case s.TERMINATE_CHILDREN:i.forEach(t=>t.close()),self.close();break;case s.SUBSCRIBE_FEED:i.forEach(t=>t.subscribe(r));break;case s.UNSUBSCRIBE_FEED:i.forEach(t=>t.unsubscribe(r));break;default:console.error(`socketWorker: Received invalid operation ${l}`)}}});
