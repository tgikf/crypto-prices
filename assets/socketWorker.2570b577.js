let n,o=[];const c=[];self.onconnect=s=>{const r=s.ports[0];n=a=>{r.postMessage(a)},r.onmessage=a=>{const{operation:l,symbol:t}=a.data;switch(l){case 1:o.forEach(e=>e.close()),self.close();break;case 2:for(let e=0;e<o.length;e++)c.includes(e)&&o[e].subscribe(t);break;case 3:for(let e=0;e<o.length;e++)c.includes(e)&&o[e].unsubscribe(t);break;default:console.error(`socketWorker: Received invalid operation ${l}`)}}};Promise.all([import("./BinanceSocketHandler.6a61bec1.js"),import("./CoinbaseSocketHandler.c87360c3.js"),import("./CoinFlexSocketHandler.a34291a5.js"),import("./BitmexSocketHandler.9de6ba50.js")]).then(([{default:s},{default:r},{default:a},{default:l}])=>{o=[s,r,a,l].map(t=>new t(n)),o.forEach(async(t,e)=>{await t.waitForReadyState(),c.push(e)})});import("./global.96739b7f.js").then(({LOG_LEVEL_DEBUG:s})=>{s||(self.console.debug=()=>{})});
