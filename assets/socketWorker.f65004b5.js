let l,s=[];const n=[];self.onconnect=t=>{const r=t.ports[0];l=a=>{r.postMessage(a)},r.onmessage=a=>{const{operation:c,symbol:o}=a.data;switch(c){case 1:s.forEach(e=>e.close()),self.close();break;case 2:for(let e=0;e<s.length;e++)n.includes(e)&&(console.debug("arewehere"),s[e].subscribe(o));break;case 3:s.forEach(e=>e.unsubscribe(o));break;default:console.error(`socketWorker: Received invalid operation ${c}`)}}};Promise.all([import("./BinanceSocketHandler.6a61bec1.js"),import("./CoinbaseSocketHandler.c87360c3.js"),import("./CoinFlexSocketHandler.a34291a5.js"),import("./BitmexSocketHandler.9de6ba50.js")]).then(([{default:t},{default:r},{default:a},{default:c}])=>{s=[t,r,a,c].map(o=>new o(l)),s.forEach(async(o,e)=>{await o.waitForReadyState(),n.push(e)})});import("./global.3cbd9d03.js").then(({LOG_LEVEL_DEBUG:t})=>{t||(self.console.debug=()=>{})});
