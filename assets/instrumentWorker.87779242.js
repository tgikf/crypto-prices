let i;const s={};let p,n;const c=o=>{const{symbol:e,provider:r,ask:t,bid:d}=o.data;let a=!1;return!e||!r||!t||!d?!1:(s[e]===void 0&&(s[e]={providers:[]}),(!s[e].bid||s[e].bidProvider===r||d>s[e].bid)&&(s[e].bid=Number(d).toFixed(6),s[e].bidProvider=r,a=!0),(!s[e].ask||s[e].askProvider===r||t<s[e].ask)&&(s[e].ask=Number(t).toFixed(6),s[e].askProvider=r,a=!0),(s[e].providers.length<=0||!s[e].providers.includes(r))&&(s[e].providers.push(r),a=!0),a&&(p=Date.now()),a)};setInterval(()=>{for(const[o,e]of Object.entries(s))e.bid&&e.ask&&(!n||p>n)&&postMessage({operation:4,symbol:o,data:s}),n=p},100);onmessage=o=>{const{operation:e,symbol:r,sharedWorkerPort:t}=o.data;switch(e){case 5:i=t,i.onmessage=c,self.postMessage({operation:0});break;case 2:i.postMessage({operation:e,symbol:r});break;case 3:i.postMessage({operation:e,symbol:r});break;default:console.error(`instrumentWorker: Received invalid operation ${e}`)}};import("./global.3cbd9d03.js").then(({LOG_LEVEL_DEBUG:o})=>{o||(self.console.debug=()=>{})});
